{"ast":null,"code":"var _jsxFileName = \"/Users/larainefajardo/Desktop/web_app/_progressive_web_app/react/new/companion/src/routes/home/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Cloud from '@mui/icons-material/Cloud';\nimport Search from '@mui/icons-material/Search';\nimport Button from '@mui/material/Button';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ElevationScroll(props) {\n  _s();\n\n  const {\n    children,\n    window\n  } = props; // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined\n  });\n  return /*#__PURE__*/React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\n_s(ElevationScroll, \"EC2GbbZl9x3XKoXLVx1H89cOBi0=\", false, function () {\n  return [useScrollTrigger];\n});\n\n_c = ElevationScroll;\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func\n};\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func\n};\n\nfunction sleep() {\n  let delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst autocompleteService = {\n  current: null\n};\nexport default function Home(props) {\n  _s2();\n\n  const navigate = useNavigate();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [expanded, setExpanded] = React.useState(false);\n  const [city, setCity] = React.useState([]);\n  const [lat, setLat] = React.useState([]);\n  const [long, setLong] = React.useState([]);\n  const ref = React.useRef(null);\n  const [userProfile, setUserProfile] = React.useState({});\n  const {\n    isAuthenticated,\n    loginWithRedirect,\n    logout,\n    user\n  } = useAuth0();\n  useEffect(() => {\n    let session = localStorage.getItem(\"userProfile\");\n    setUserProfile(JSON.parse(session));\n  }, []);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const [value, setValue] = React.useState('');\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n  const previousController = useRef();\n\n  const getApiData = async () => {\n    let active = true;\n    let newOptions = [];\n    const response = await fetch(\"http://api.openweathermap.org/geo/1.0/direct?q=Cabanatuan&limit=5&appid=447de07f839b7e9041672cd99146d7e4\").then(response => response.json());\n    console.log(JSON.stringify(response)); // update the state\n\n    setCity(JSON.stringify(response));\n  };\n\n  const getData = searchTerm => {\n    if (previousController.current) {\n      previousController.current.abort();\n    }\n\n    const controller = new AbortController();\n    const signal = controller.signal;\n    console.log(\"SIGNAL :\" + signal);\n    previousController.current = controller;\n    fetch(\"https://api.openweathermap.org/geo/1.0/direct?q=\" + searchTerm + \"&limit=5&appid=447de07f839b7e9041672cd99146d7e4\", {\n      signal,\n      cors: false\n    }).then(function (response) {\n      return response.json();\n    }).then(function (myJson) {\n      const updatedOptions = myJson.map(p => {\n        let state = p.state != undefined ? \", \" + p.state : \"\";\n        return {\n          title: p.name + state,\n          lat: p.lat,\n          long: p.lon\n        };\n      });\n      setOptions(updatedOptions);\n    });\n  };\n\n  const onInputChange = (event, value, reason) => {\n    if (value) {\n      getData(value);\n    } else {\n      setOptions([]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ElevationScroll, { ...props,\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        style: {\n          background: '#87CEEB'\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"large\",\n            \"aria-label\": \"account of current user\",\n            \"aria-controls\": \"menu-appbar\",\n            \"aria-haspopup\": \"true\",\n            onClick: handleMenu,\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(Cloud, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              flex: 1\n            },\n            children: \"Weather Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              onClick: logout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        my: 8,\n        mx: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        sx: {\n          flex: 1\n        },\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        sx: {\n          flex: 1\n        },\n        children: `https://github.com/${user.nickname}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        disablePortal: true,\n        id: \"combo-box-demo\",\n        sx: {\n          width: 300\n        },\n        options: options,\n        onInputChange: onInputChange,\n        getOptionLabel: option => option.title,\n        onChange: (event, value) => {\n          setLat(value.lat);\n          setLong(value.long);\n          setValue(value.title);\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Search, {\n              className: \"myIcon\",\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), \"City\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 80\n          }, this),\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        sx: {\n          mt: 3,\n          mb: 2\n        },\n        isdisabled: true,\n        onClick: () => navigate('/weather?lat=' + lat + \",long=\" + long),\n        children: \"Display Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Home, \"d+E9ZmlszF1av/ohSsGnPUCt0r0=\", false, function () {\n  return [useNavigate, useAuth0];\n});\n\n_c2 = Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ElevationScroll\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/larainefajardo/Desktop/web_app/_progressive_web_app/react/new/companion/src/routes/home/index.js"],"names":["React","useEffect","useRef","IconButton","Typography","Cloud","Search","Button","useNavigate","Box","CssBaseline","PropTypes","AppBar","Toolbar","useScrollTrigger","useAuth0","TextField","Autocomplete","CircularProgress","ElevationScroll","props","children","window","trigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","propTypes","element","isRequired","func","sleep","delay","Promise","resolve","setTimeout","autocompleteService","current","Home","navigate","anchorEl","setAnchorEl","useState","expanded","setExpanded","city","setCity","lat","setLat","long","setLong","ref","userProfile","setUserProfile","isAuthenticated","loginWithRedirect","logout","user","session","localStorage","getItem","JSON","parse","handleMenu","event","currentTarget","value","setValue","inputValue","setInputValue","options","setOptions","previousController","getApiData","active","newOptions","response","fetch","then","json","console","log","stringify","getData","searchTerm","abort","controller","AbortController","signal","cors","myJson","updatedOptions","map","p","state","title","name","lon","onInputChange","reason","background","flex","my","mx","display","flexDirection","alignItems","nickname","width","option","params","mt","mb"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Cloud from '@mui/icons-material/Cloud';\nimport Search from '@mui/icons-material/Search';\nimport Button from '@mui/material/Button';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\n\nimport CircularProgress from '@mui/material/CircularProgress';\nfunction ElevationScroll(props) {\n    const { children, window } = props;\n    // Note that you normally won't need to set the window ref as useScrollTrigger\n    // will default to window.\n    // This is only being set here because the demo is in an iframe.\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n        target: window ? window() : undefined,\n    });\n\n    return React.cloneElement(children, {\n        elevation: trigger ? 4 : 0,\n    });\n}\n\nElevationScroll.propTypes = {\n    children: PropTypes.element.isRequired,\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window: PropTypes.func,\n};\n\n\nElevationScroll.propTypes = {\n    children: PropTypes.element.isRequired,\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window: PropTypes.func,\n};\n\nfunction sleep(delay = 0) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, delay);\n    });\n}\nconst autocompleteService = { current: null };\nexport default function Home(props) {\n    const navigate = useNavigate();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [expanded, setExpanded] = React.useState(false);\n    const [city, setCity] = React.useState([]);\n    const [lat, setLat] = React.useState([]);\n    const [long, setLong] = React.useState([]);\n    const ref = React.useRef(null);\n    const [userProfile, setUserProfile] = React.useState({});\n    const {\n        isAuthenticated,\n        loginWithRedirect, logout, user\n    } = useAuth0();\n\n    useEffect(() => {\n        let session = localStorage.getItem(\"userProfile\");\n        setUserProfile(JSON.parse(session));\n    }, [])\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const [value, setValue] = React.useState('');\n    const [inputValue, setInputValue] = React.useState('');\n    const [options, setOptions] = React.useState([]);\n    const previousController = useRef();\n\n    const getApiData = async () => {\n        let active = true;\n        let newOptions = [];\n\n        const response = await fetch(\n            \"http://api.openweathermap.org/geo/1.0/direct?q=Cabanatuan&limit=5&appid=447de07f839b7e9041672cd99146d7e4\"\n        ).then((response) => response.json());\n        console.log(JSON.stringify(response))\n        // update the state\n\n        setCity(JSON.stringify(response));\n\n\n    };\n\n    const getData = (searchTerm) => {\n        if (previousController.current) {\n            previousController.current.abort();\n        }\n        const controller = new AbortController();\n        const signal = controller.signal;\n        console.log(\"SIGNAL :\" + signal);\n        previousController.current = controller;\n        fetch(\"https://api.openweathermap.org/geo/1.0/direct?q=\" + searchTerm + \"&limit=5&appid=447de07f839b7e9041672cd99146d7e4\", {\n            signal,\n            cors: false\n        })\n            .then(function (response) {\n                return response.json();\n            })\n            .then(function (myJson) {\n                const updatedOptions = myJson.map((p) => {\n                    let state = p.state != undefined ? \", \" + p.state : \"\";\n                    return { title: p.name + state, lat: p.lat, long: p.lon };\n                });\n                setOptions(updatedOptions);\n            });\n    };\n\n    const onInputChange = (event, value, reason) => {\n        if (value) {\n            getData(value);\n        } else {\n            setOptions([\n            ]);\n        }\n    };\n\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n\n            <ElevationScroll {...props}>\n                <AppBar style={{ background: '#87CEEB' }} >\n                    <Toolbar>\n                        <IconButton\n                            size=\"large\"\n                            aria-label=\"account of current user\"\n                            aria-controls=\"menu-appbar\"\n                            aria-haspopup=\"true\"\n                            onClick={handleMenu}\n                            color=\"inherit\"\n                        >\n                            <Cloud />\n                        </IconButton>\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flex: 1 }}>\n                            Weather Forecast\n                        </Typography>\n                        <div>\n\n                            <Button\n                                type=\"submit\"\n                                variant=\"contained\"\n                                onClick={logout}\n                            >\n                                Logout\n                            </Button>\n                        </div>\n\n                    </Toolbar>\n                </AppBar>\n\n            </ElevationScroll>\n            <Toolbar />\n            {isAuthenticated && (\n                <Box\n                    sx={{\n                        my: 8,\n                        mx: 4,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flex: 1 }} >\n                        {user.name}\n                    </Typography>\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flex: 1 }} >\n                        {`https://github.com/${user.nickname}`}\n                    </Typography>\n\n                    <Autocomplete\n                        disablePortal\n                        id=\"combo-box-demo\"\n                        sx={{ width: 300 }}\n                        options={options}\n                        onInputChange={onInputChange}\n                        getOptionLabel={(option) => option.title}\n                        onChange={(event, value) => {\n                            setLat(value.lat);\n                            setLong(value.long);\n                            setValue(value.title);\n                        }}\n                        renderInput={(params) => <TextField {...params} label={<React.Fragment>\n                            <Search className=\"myIcon\" fontSize=\"small\" />\n                            City\n                        </React.Fragment>} variant=\"outlined\"\n\n                        />}\n                    />\n\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        sx={{ mt: 3, mb: 2 }}\n                        isdisabled\n                        onClick={() => navigate('/weather?lat=' + lat + \",long=\" + long)}\n                    >\n                        Display Weather\n                    </Button>\n                </Box>\n            )}\n        </React.Fragment >\n    );\n}"]},"metadata":{},"sourceType":"module"}