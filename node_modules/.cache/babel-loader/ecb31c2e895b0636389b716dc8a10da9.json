{"ast":null,"code":"// export const API_URL = 'http://20.24.41.57:5000';\nexport const API_URL = 'http://jfc-sentinel-dev.herokuapp.com';\nexport const endpoints = async params => ({\n  register: {\n    url: '/api/registration',\n    queryParams: [],\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  },\n  authentication_login: {\n    url: '/api/inbound_sms/',\n    queryParams: [],\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }\n}); // export const apiModule = async (my_module, requestParams, formData, queryStrings, special) => {\n//     let url = endpoints(requestParams)[my_module].url;\n//     let headers = endpoints(requestParams)[my_module].headers;\n//     let method = endpoints(requestParams)[my_module].method;\n//     let server_url = myConfig.SERVER_URL;\n//     if (endpoints(requestParams)[my_module].server_url !== null &&\n//         endpoints(requestParams)[my_module].server_url !== undefined) {\n//         server_url = endpoints(requestParams)[my_module].server_url;\n//     }\n//     writeData('actions', { last_action: Date.now(), id: 1 });\n//     if (queryStrings === null || queryStrings === undefined) {\n//         queryStrings = \"\";\n//     }\n//     //Use axios whenver we want to use application/json as the body header. Otherwise we will use x-www-form-urlencoded\n//     if (special) {\n//         return new Promise(function (resolve, reject) {\n//             let myUrl = server_url + url + queryStrings;\n//             axios(\n//                 {\n//                     method: method,\n//                     url: myUrl,\n//                     data: formData,\n//                     headers: headers\n//                 })\n//                 .then(function (data) {\n//                     writeData('actions', { last_action: Date.now(), id: 1 });\n//                     resolve(data);\n//                 })\n//                 .catch(function (err) {\n//                     writeData('actions', { last_action: Date.now(), id: 1 });\n//                     reject(err);\n//                 });\n//         });\n//     } else if (headers[\"Content-Type\"] != undefined && headers[\"Content-Type\"] == \"application/json\") {\n//         /*HANDLING JSON CONTENT TYPE*/\n//         return new Promise(function (resolve, reject) {\n//             fetch(server_url + url + queryStrings, {\n//                 method: method,\n//                 headers: headers,\n//                 body: formData\n//             })\n//                 .then(function (response) {\n//                     return response.json();\n//                 })\n//                 .then(async function (data) {\n//                     await isSessionExpired(data);\n//                     writeData('actions', { last_action: Date.now(), id: 1 });\n//                     resolve(data);\n//                 })\n//                 .catch(function (err) {\n//                     writeData('actions', { last_action: Date.now(), id: 1 });\n//                     reject(err);\n//                 });\n//         });\n//     }\n//     else if (headers[\"Content-Type\"] != undefined && headers[\"Content-Type\"] == \"multipart/form-data\") {\n//         return new Promise(function (resolve, reject) {\n//             let myUrl = server_url + url;\n//             axios(\n//                 {\n//                     method: method,\n//                     url: myUrl,\n//                     data: formData,\n//                     headers: headers\n//                 })\n//                 .then(function (data) {\n//                     writeData('actions', { last_action: Date.now(), id: 1 });\n//                     resolve(data);\n//                 })\n//                 .catch(function (err) {\n//                     writeData('actions', { last_action: Date.now(), id: 1 });\n//                     reject(err);\n//                 });\n//         });\n//     }\n//     else {\n//         /*HANDLING FORM URL ENCODED CONTENT TYPE AND GET REQUESTS*/\n//         let data = jsonToURI(formData);\n//         return new Promise(function (resolve, reject) {\n//             if (data === null || data === '') {\n//                 console.log(server_url + url + queryStrings);\n//                 fetch(server_url + url + queryStrings, {\n//                     method: method,\n//                     headers: headers\n//                 })\n//                     .then(function (response) {\n//                         return response.json();\n//                     })\n//                     .then(async function (data) {\n//                         await isSessionExpired(data);\n//                         writeData('actions', { last_action: Date.now(), id: 1 });\n//                         resolve(data);\n//                     })\n//                     .catch(function (err) {\n//                         writeData('actions', { last_action: Date.now(), id: 1 });\n//                         reject(err);\n//                     });\n//             } else {\n//                 console.log(server_url + url + queryStrings);\n//                 fetch(server_url + url + queryStrings, {\n//                     method: method,\n//                     headers: headers,\n//                     body: data\n//                 })\n//                     .then(function (response) {\n//                         return response.json();\n//                     })\n//                     .then(async function (data) {\n//                         await isSessionExpired(data);\n//                         writeData('actions', { last_action: Date.now(), id: 1 });\n//                         resolve(data);\n//                     })\n//                     .catch(function (err) {\n//                         writeData('actions', { last_action: Date.now(), id: 1 });\n//                         reject(err);\n//                     });\n//             }\n//         });\n//     }\n// }","map":{"version":3,"sources":["/Users/larainefajardo/Desktop/web_app/_progressive_web_app/react/companion/src/api/endpoints.js"],"names":["API_URL","endpoints","params","register","url","queryParams","method","headers","authentication_login"],"mappings":"AAAA;AACA,OAAO,MAAMA,OAAO,GAAG,uCAAhB;AAEP,OAAO,MAAMC,SAAS,GAAG,MAAOC,MAAP,KAAmB;AACxCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,GAAG,EAAE,mBADC;AAENC,IAAAA,WAAW,EAAE,EAFP;AAGNC,IAAAA,MAAM,EAAE,MAHF;AAINC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAJH,GAD8B;AAOxCC,EAAAA,oBAAoB,EAAE;AAClBJ,IAAAA,GAAG,EAAE,mBADa;AAElBC,IAAAA,WAAW,EAAE,EAFK;AAGlBC,IAAAA,MAAM,EAAE,MAHU;AAIlBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAJS;AAPkB,CAAnB,CAAlB,C,CAgsourcesContent":["// export const API_URL = 'http://20.24.41.57:5000';\nexport const API_URL = 'http://jfc-sentinel-dev.herokuapp.com';\n\nexport const endpoints = async (params) => ({\n    register: {\n        url: '/api/registration',\n        queryParams: [],\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n    },\n    authentication_login: {\n        url: '/api/inbound_sms/',\n        queryParams: [],\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n    },\n});\n\n\n// export const apiModule = async (my_module, requestParams, formData, queryStrings, special) => {\n//     let url = endpoints(requestParams)[my_module].url;\n\n//     let headers = endpoints(requestParams)[my_module].headers;\n//     let method = endpoints(requestParams)[my_module].method;\n//     let server_url = myConfig.SERVER_URL;\n//     if (endpoints(requestParams)[my_module].server_url !== null &&\n//         endpoints(requestParams)[my_module].server_url !== undefined) {\n//         server_url = endpoints(requestParams)[my_module].server_url;\n//     }\n\n//     writeData('actions', { last_action: Date.now(), id: 1 });\n\n//     if (queryStrings === null || queryStrings === undefined) {\n//         queryStrings = \"\";\n\n//     }\n\n//     //Use axios whenver we want to use application/json as the body header. Otherwise we will use x-www-form-urlencoded\n//     if (special) {\n\n//         return new Promise(function (resolve, reject) {\n//             let myUrl = server_url + url + queryStrings;\n//             axios(\n//                 {\n//                     method: method,\n//                     url: myUrl,\n//                     data: formData,\n//                     headers: headers\n//                 })\n//                 .then(function (data) {\n//                     writeData('actions', { last_action: Date.now(), id: 1 });\n//                     resolve(data);\n//                 })\n//                 .catch(function (err) {\n//                     writeData('actions', { last_action: Date.now(), id: 1 });\n//                     reject(err);\n//                 });\n//         });\n\n//     } else if (headers[\"Content-Type\"] != undefined && headers[\"Content-Type\"] == \"application/json\") {\n//         /*HANDLING JSON CONTENT TYPE*/\n//         return new Promise(function (resolve, reject) {\n\n//             fetch(server_url + url + queryStrings, {\n//                 method: method,\n//                 headers: headers,\n//                 body: formData\n//             })\n//                 .then(function (response) {\n//                     return response.json();\n//                 })\n//                 .then(async function (data) {\n//                     await isSessionExpired(data);\n//                     writeData('actions', { last_action: Date.now(), id: 1 });\n//                     resolve(data);\n//                 })\n//                 .catch(function (err) {\n//                     writeData('actions', { last_action: Date.now(), id: 1 });\n//                     reject(err);\n//                 });\n//         });\n//     }\n\n//     else if (headers[\"Content-Type\"] != undefined && headers[\"Content-Type\"] == \"multipart/form-data\") {\n//         return new Promise(function (resolve, reject) {\n//             let myUrl = server_url + url;\n//             axios(\n//                 {\n//                     method: method,\n//                     url: myUrl,\n//                     data: formData,\n//                     headers: headers\n//                 })\n//                 .then(function (data) {\n//                     writeData('actions', { last_action: Date.now(), id: 1 });\n//                     resolve(data);\n//                 })\n//                 .catch(function (err) {\n//                     writeData('actions', { last_action: Date.now(), id: 1 });\n//                     reject(err);\n//                 });\n//         });\n//     }\n\n//     else {\n//         /*HANDLING FORM URL ENCODED CONTENT TYPE AND GET REQUESTS*/\n//         let data = jsonToURI(formData);\n//         return new Promise(function (resolve, reject) {\n//             if (data === null || data === '') {\n//                 console.log(server_url + url + queryStrings);\n//                 fetch(server_url + url + queryStrings, {\n//                     method: method,\n//                     headers: headers\n//                 })\n//                     .then(function (response) {\n//                         return response.json();\n//                     })\n//                     .then(async function (data) {\n//                         await isSessionExpired(data);\n//                         writeData('actions', { last_action: Date.now(), id: 1 });\n//                         resolve(data);\n//                     })\n//                     .catch(function (err) {\n//                         writeData('actions', { last_action: Date.now(), id: 1 });\n//                         reject(err);\n//                     });\n//             } else {\n//                 console.log(server_url + url + queryStrings);\n//                 fetch(server_url + url + queryStrings, {\n//                     method: method,\n//                     headers: headers,\n//                     body: data\n//                 })\n//                     .then(function (response) {\n//                         return response.json();\n//                     })\n//                     .then(async function (data) {\n//                         await isSessionExpired(data);\n//                         writeData('actions', { last_action: Date.now(), id: 1 });\n//                         resolve(data);\n//                     })\n//                     .catch(function (err) {\n//                         writeData('actions', { last_action: Date.now(), id: 1 });\n//                         reject(err);\n//                     });\n\n//             }\n//         });\n//     }\n\n// }"]},"metadata":{},"sourceType":"module"}