{"ast":null,"code":"var _jsxFileName = \"/Users/larainefajardo/Desktop/web_app/_progressive_web_app/react/companion/src/routes/profile/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { red } from '@mui/material/colors';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport ShareIcon from '@mui/icons-material/Share';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Cards from './cards.js';\nimport { useNavigate } from 'react-router-dom';\nimport { request } from \"../../api/api\";\nimport TextField from '@mui/material/TextField';\nimport Fab from '@mui/material/Fab';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport AddIcon from '@mui/icons-material/Add';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RestoreIcon from '@mui/icons-material/Restore';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ArchiveIcon from '@mui/icons-material/Archive';\nimport Paper from '@mui/material/Paper';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport FormLabel from '@mui/material/FormLabel';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Container from '@mui/material/Container';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport ImageUpload from \"./imageUpload\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\n\nfunction ElevationScroll(props) {\n  _s();\n\n  const {\n    children,\n    window\n  } = props; // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined\n  });\n  return /*#__PURE__*/React.cloneElement(children, {\n    elevation: trigger ? 4 : 0\n  });\n}\n\n_s(ElevationScroll, \"EC2GbbZl9x3XKoXLVx1H89cOBi0=\", false, function () {\n  return [useScrollTrigger];\n});\n\n_c = ElevationScroll;\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func\n};\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func\n};\nconst finalTheme = createTheme({\n  components: {\n    MuiTextField: {\n      variants: [// variants will help you define the props given by Mui and the styles you want to apply for it\n      {\n        props: {\n          variant: 'outlined',\n          disabled: true\n        },\n        style: {\n          backgroundColor: 'green',\n          color: 'red',\n          fontSize: '5rem'\n        }\n      }]\n    }\n  }\n});\nexport default function Profile(props) {\n  _s2();\n\n  const navigate = useNavigate();\n  const [expanded, setExpanded] = React.useState(false);\n  const [value, setValue] = React.useState(3);\n  const [userProfile, setUserProfile] = React.useState([]);\n  const [wallet, setWallet] = React.useState({});\n  const ref = React.useRef(null);\n  const [profile, setProfile] = React.useState({\n    Access: [{\n      RoleId: \"\"\n    }]\n  });\n  const [typeOfRole, setTypeOfRole] = React.useState('');\n  const [validate, setValidate] = React.useState(false);\n  const [selectedFile, setSelectedFile] = React.useState(null);\n  let [userDetails, setUserDetails] = useState({\n    \"Studentno\": \"\",\n    \"Firstname\": \"\",\n    \"Middlename\": \"\",\n    \"Lastname\": \"\",\n    \"Emailaddress\": \"\",\n    \"Age\": \"\",\n    \"Address\": \"\",\n    \"Gender\": \"Female\",\n    \"Country\": \"\",\n    \"Contactno\": \"\",\n    \"Civilstatus\": \"\",\n    \"Schoolcampus\": \"\",\n    \"Degree\": \"\",\n    \"Course\": \"\",\n    \"Pictureblob\": \"\",\n    \"ApprovedBy\": \"\",\n    \"Servicecategorypriority\": \"\",\n    \"RoleId\": \"Student\",\n    \"Username\": \"\",\n    \"Password\": \"\",\n    \"Accountno\": \"\",\n    \"Accountname\": \"\",\n    \"Bankname\": \"\",\n    \"Location\": \"\"\n  });\n  const [typeOfActivity, setTypeOfActivity] = React.useState('');\n\n  const handleChangeOption = event => {\n    setTypeOfRole(event.target.value);\n  };\n\n  const handleChangeCategoryOption = event => {\n    setTypeOfActivity(event.target.value);\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    userDetails[e.target.name] = e.target.value;\n    setUserDetails(userDetails);\n    console.log(JSON.stringify(userDetails));\n  };\n\n  async function doLogin() {\n    const payload = userDetails;\n    setValidate(true);\n    payload[\"RoleId\"] = typeOfRole;\n\n    if (typeOfRole == \"Buddy\") {\n      payload[\"Servicecategorypriority\"] = typeOfActivity;\n    }\n\n    if (selectedFile != null) {\n      payload[\"Pictureblob\"] = selectedFile;\n    }\n\n    const result = await request('register', payload);\n\n    if (result[\"data\"] != null) {\n      toast.success(\"Registered successfully!\");\n      navigate('/login');\n    } else {\n      // alert(JSON.stringify(result));\n      toast.warn(\"Profile validation failed!\");\n    }\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    console.log({\n      email: data.get('email'),\n      password: data.get('password')\n    });\n  };\n\n  const galleryImageList = [\"https://raw.githubusercontent.com/dxyang/StyleTransfer/master/style_imgs/mosaic.jpg\", \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/Van_Gogh_-_Starry_Night_-_Google_Art_Project.jpg/1280px-Van_Gogh_-_Starry_Night_-_Google_Art_Project.jpg\", \"https://raw.githubusercontent.com/ShafeenTejani/fast-style-transfer/master/examples/dora-maar-picasso.jpg\", \"https://pbs.twimg.com/profile_images/925531519858257920/IyYLHp-u_400x400.jpg\", \"https://raw.githubusercontent.com/ShafeenTejani/fast-style-transfer/master/examples/dog.jpg\", \"http://r.ddmcdn.com/s_f/o_1/cx_462/cy_245/cw_1349/ch_1349/w_720/APL/uploads/2015/06/caturday-shutterstock_149320799.jpg\"];\n  useEffect(() => {\n    let session = localStorage.getItem(\"userProfile\");\n    setProfile(JSON.parse(session));\n  }, []);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      let session = localStorage.getItem(\"session\");\n      const result = await request('getProfile', null);\n      const wallet = await request('getWallet', null, {\n        userId: session\n      });\n      setWallet(wallet);\n      setUserProfile(result.data); // alert(JSON.stringify(result.data));\n    }\n\n    fetchData();\n  }, []);\n\n  function getProfile() {\n    if (userProfile.length > 0) {\n      return userProfile.map((item, i) => {\n        if (item._id == localStorage.getItem(\"session\")) {\n          return (\n            /*#__PURE__*/\n            // <div className='row col-md-12 m-3' key={i}>\n            //     <label><strong>Firstname:</strong> {item.Firstname}</label>\n            //     <label><strong>Lastname:</strong> {item.Lastname}</label>\n            //     <label><strong>Email:</strong> {item.Emailaddress}</label>\n            //     <label><strong>Age:</strong> {item.Age}</label>\n            //     <label><strong>Address:</strong> {item.Address}</label>\n            //     <label><strong>Gender:</strong> {item.Gender}</label>\n            //     <label><strong>Bank Account</strong></label>\n            //     <label><strong>Account Number:</strong> {item.Bankaccount[0][\"Accountno\"]}</label>\n            //     <label><strong>Account Name:</strong> {item.Bankaccount[0][\"Accountname\"]}</label>\n            //     <label><strong>Bank Name:</strong> {item.Bankaccount[0][\"Bankname\"]}</label>\n            //     <label><strong>Location:</strong> {item.Bankaccount[0][\"Location\"]}</label>\n            //     <label className='mt-3'><strong>Wallet</strong></label>\n            //     <label><strong>Balance:</strong> {wallet[\"Balance\"]}</label>\n            //     <label><strong>Rewards:</strong> {wallet[\"Rewards\"]}</label>\n            // </div>\n            _jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                error: selectedFile == null && validate ? true : false,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-label\",\n                  children: selectedFile == null ? \"Select Profile:\" : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(ImageUpload, {\n                  cardName: \"Input Image\",\n                  imageGallery: galleryImageList,\n                  setSelectedFile: i => setSelectedFile(i),\n                  selectedFile: selectedFile\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                component: \"form\",\n                validate: true,\n                onSubmit: handleSubmit,\n                sx: {\n                  mt: 3,\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 2,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      autoComplete: \"given-name\",\n                      name: \"Firstname\",\n                      fullWidth: true,\n                      id: \"Firstname\",\n                      label: \"First Name\",\n                      value: item.Firstname\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      fullWidth: true,\n                      id: \"Middlename\",\n                      label: \"M.I.\",\n                      name: \"Middlename\",\n                      autoComplete: \"family-name\",\n                      value: item.Middlename\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    sm: 4,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      value: item.Lastname,\n                      id: \"Lastname\",\n                      label: \"Last Name\",\n                      name: \"Lastname\",\n                      autoComplete: \"family-name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Emailaddress\",\n                      color: userDetails[\"Emailaddress\"] == \"\" && validate ? \"error\" : \"\",\n                      label: \"Email Address\",\n                      name: \"Emailaddress\",\n                      focused: validate,\n                      value: item.Emailaddress,\n                      autoComplete: \"Emailaddress\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Studentno\",\n                      color: userDetails[\"Studentno\"] == \"\" && validate ? \"error\" : \"\",\n                      label: \"Student Number\",\n                      name: \"Studentno\",\n                      value: item.Studentno,\n                      focused: validate,\n                      autoComplete: \"Studentno\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 315,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 314,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Contactno\",\n                      color: userDetails[\"Contactno\"] == \"\" && validate ? \"error\" : \"\",\n                      label: \"Mobile Number\",\n                      name: \"Contactno\",\n                      focused: validate,\n                      value: item.Contactno,\n                      autoComplete: \"Contactno\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Age\",\n                      color: userDetails[\"Age\"] == \"\" && validate ? \"error\" : \"\",\n                      label: \"Age\",\n                      name: \"Age\",\n                      focused: validate,\n                      value: item.Age,\n                      autoComplete: \"age\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Address\",\n                      color: userDetails[\"Address\"] == \"\" && validate ? \"error\" : \"\",\n                      label: \"Address\",\n                      name: \"Address\",\n                      value: item.Address,\n                      focused: validate,\n                      autoComplete: \"Address\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                      id: \"demo-radio-buttons-group-label\",\n                      children: \"Gender\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 371,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                      \"aria-labelledby\": \"demo-radio-buttons-group-label\",\n                      defaultValue: item.Gender,\n                      name: \"radio-buttons-group\",\n                      onChange: (e, value) => {\n                        let user = userDetails;\n\n                        if (value == 'Female') {\n                          user[\"Gender\"] = \"Female\";\n                        } else {\n                          user[\"Gender\"] = \"Male\";\n                        }\n\n                        setUserDetails(user);\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"Female\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 386,\n                          columnNumber: 87\n                        }, this),\n                        label: \"Female\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 386,\n                        columnNumber: 45\n                      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: \"Male\",\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 387,\n                          columnNumber: 85\n                        }, this),\n                        label: \"Male\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 387,\n                        columnNumber: 45\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Country\",\n                      value: item.Country,\n                      label: \"Country\",\n                      color: userDetails[\"Country\"] == \"\" && validate ? \"error\" : \"\",\n                      focused: validate,\n                      name: \"Country\",\n                      autoComplete: \"Country\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 391,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Civilstatus\",\n                      label: \"Civil Status\",\n                      name: \"Civilstatus\",\n                      value: item.Civilstatus,\n                      color: userDetails[\"Civilstatus\"] == \"\" && validate ? \"error\" : \"\",\n                      autoComplete: \"Civilstatus\",\n                      focused: validate,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 405,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Schoolcampus\",\n                      value: item.Schoolcampus,\n                      label: \"School Campus\",\n                      name: \"Schoolcampus\",\n                      color: userDetails[\"Schoolcampus\"] == \"\" && validate ? \"error\" : \"\",\n                      autoComplete: \"Schoolcampus\",\n                      focused: validate,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Degree\",\n                      value: item.Degree,\n                      color: userDetails[\"Degree\"] == \"\" && validate ? \"error\" : \"\",\n                      label: \"Degree\",\n                      focused: validate,\n                      name: \"Degree\",\n                      autoComplete: \"Degree\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Course\",\n                      label: \"Course\",\n                      value: item.Course,\n                      name: \"Course\",\n                      color: userDetails[\"Course\"] == \"\" && validate ? \"error\" : \"\",\n                      autoComplete: \"Course\",\n                      focused: validate,\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Username\",\n                      value: item.Access[0].Username,\n                      label: \"Username\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 461,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Accountno\",\n                      label: \"Account No.\",\n                      value: item.Bankaccount[0].Accountno,\n                      name: \"Accountno\",\n                      color: userDetails[\"Accountno\"] == \"\" && validate ? \"error\" : \"\",\n                      focused: validate,\n                      autoComplete: \"Accountno\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 485,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Accountname\",\n                      label: \"Account Name\",\n                      name: \"Accountname\",\n                      value: item.Bankaccount[0].Accountname,\n                      color: userDetails[\"Accountname\"] == \"\" && validate ? \"error\" : \"\",\n                      focused: validate,\n                      autoComplete: \"Accountname\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 499,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Bankname\",\n                      label: \"Bank Name\",\n                      name: \"Bankname\",\n                      value: item.Bankaccount[0].Bankname,\n                      color: userDetails[\"Bankname\"] == \"\" && validate ? \"error\" : \"\",\n                      focused: validate,\n                      autoComplete: \"Bankname\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 513,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Location\",\n                      label: \"Location\",\n                      name: \"Location\",\n                      value: item.Bankaccount[0].Location,\n                      color: userDetails[\"Location\"] == \"\" && validate ? \"error\" : \"\",\n                      focused: validate,\n                      autoComplete: \"Location\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 527,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 526,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"Role\",\n                      label: \"Role\",\n                      name: \"Role\",\n                      value: item.Access[0].RoleId,\n                      focused: validate,\n                      autoComplete: \"Location\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 541,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 37\n                  }, this), item.Access[0].RoleId == \"Student\" ? null : /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      required: true,\n                      fullWidth: true,\n                      id: \"RoleType\",\n                      label: \"Role Type\",\n                      name: \"RoleType\",\n                      value: item.Servicecategorypriority,\n                      focused: validate,\n                      autoComplete: \"Location\",\n                      onChange: handleChange\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 554,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 82\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 25\n            }, this)\n          );\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      pb: 7\n    },\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ElevationScroll, { ...props,\n      children: /*#__PURE__*/_jsxDEV(AppBar, {\n        style: {\n          background: '#087830'\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: getProfile()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 13\n    }, this), profile[\"Access\"][0].RoleId != \"Buddy\" ? /*#__PURE__*/_jsxDEV(Fab, {\n      color: \"primary\",\n      className: \"add-service\",\n      \"aria-label\": \"add\",\n      onClick: () => navigate('/services'),\n      children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 55\n    }, this) : null, /*#__PURE__*/_jsxDEV(Fab, {\n      color: \"success\",\n      className: \"cash-in\",\n      \"aria-label\": \"cash-in\",\n      onClick: () => navigate('/cash-in'),\n      children: /*#__PURE__*/_jsxDEV(AccountBalanceWalletIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0\n      },\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(BottomNavigation, {\n        showLabels: true,\n        value: value,\n        onChange: (event, newValue) => {\n          setValue(newValue);\n        },\n        children: [profile[\"Access\"][0].RoleId == \"Buddy\" ? /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Services\",\n          onClick: () => navigate('/home'),\n          icon: /*#__PURE__*/_jsxDEV(RestoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 144\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 63\n        }, this) : null, /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"On Going\",\n          onClick: () => navigate('/on-going-activity'),\n          icon: /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 115\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"History\",\n          onClick: () => navigate('/history'),\n          icon: /*#__PURE__*/_jsxDEV(ArchiveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 104\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 619,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Profile, \"HTyQlBBna+9YmsvPWSbWXGvg/nI=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = Profile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ElevationScroll\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"sources":["/Users/larainefajardo/Desktop/web_app/_progressive_web_app/react/companion/src/routes/profile/index.js"],"names":["React","useState","useEffect","styled","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","Avatar","Button","IconButton","Typography","red","FormControlLabel","ShareIcon","ExpandMoreIcon","MoreVertIcon","Cards","useNavigate","request","TextField","Fab","AccountBalanceWalletIcon","AddIcon","Box","CssBaseline","BottomNavigation","BottomNavigationAction","RestoreIcon","FavoriteIcon","ArchiveIcon","Paper","List","ListItem","ListItemAvatar","ListItemText","PropTypes","AppBar","Toolbar","useScrollTrigger","Link","Grid","FormLabel","RadioGroup","Radio","LockOutlinedIcon","Container","InputLabel","MenuItem","FormControl","Select","createTheme","ThemeProvider","ImageUpload","ToastContainer","toast","theme","ElevationScroll","props","children","window","trigger","disableHysteresis","threshold","target","undefined","cloneElement","elevation","propTypes","element","isRequired","func","finalTheme","components","MuiTextField","variants","variant","disabled","style","backgroundColor","color","fontSize","Profile","navigate","expanded","setExpanded","value","setValue","userProfile","setUserProfile","wallet","setWallet","ref","useRef","profile","setProfile","Access","RoleId","typeOfRole","setTypeOfRole","validate","setValidate","selectedFile","setSelectedFile","userDetails","setUserDetails","typeOfActivity","setTypeOfActivity","handleChangeOption","event","handleChangeCategoryOption","handleChange","e","preventDefault","name","console","log","JSON","stringify","doLogin","payload","result","success","warn","handleSubmit","data","FormData","currentTarget","email","get","password","galleryImageList","session","localStorage","getItem","parse","handleExpandClick","fetchData","userId","getProfile","length","map","item","i","_id","mt","mb","Firstname","Middlename","Lastname","Emailaddress","Studentno","Contactno","Age","Address","Gender","user","Country","Civilstatus","Schoolcampus","Degree","Course","Username","Bankaccount","Accountno","Accountname","Bankname","Location","Servicecategorypriority","pb","background","position","bottom","left","right","newValue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { red } from '@mui/material/colors';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport ShareIcon from '@mui/icons-material/Share';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Cards from './cards.js';\nimport { useNavigate } from 'react-router-dom';\nimport { request } from \"../../api/api\";\n\nimport TextField from '@mui/material/TextField';\nimport Fab from '@mui/material/Fab';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport AddIcon from '@mui/icons-material/Add';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport RestoreIcon from '@mui/icons-material/Restore';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport ArchiveIcon from '@mui/icons-material/Archive';\nimport Paper from '@mui/material/Paper';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\n\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\n\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport FormLabel from '@mui/material/FormLabel';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Container from '@mui/material/Container';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport ImageUpload from \"./imageUpload\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst theme = createTheme();\nfunction ElevationScroll(props) {\n    const { children, window } = props;\n    // Note that you normally won't need to set the window ref as useScrollTrigger\n    // will default to window.\n    // This is only being set here because the demo is in an iframe.\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n        target: window ? window() : undefined,\n    });\n\n    return React.cloneElement(children, {\n        elevation: trigger ? 4 : 0,\n    });\n}\n\nElevationScroll.propTypes = {\n    children: PropTypes.element.isRequired,\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window: PropTypes.func,\n};\n\n\nElevationScroll.propTypes = {\n    children: PropTypes.element.isRequired,\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window: PropTypes.func,\n};\n\nconst finalTheme = createTheme({\n    components: {\n        MuiTextField: {\n            variants: [ // variants will help you define the props given by Mui and the styles you want to apply for it\n                {\n                    props: { variant: 'outlined', disabled: true },\n                    style: {\n                        backgroundColor: 'green',\n                        color: 'red',\n                        fontSize: '5rem'\n                    }\n                }\n            ]\n        }\n    }\n})\n\nexport default function Profile(props) {\n    const navigate = useNavigate();\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [value, setValue] = React.useState(3);\n    const [userProfile, setUserProfile] = React.useState([]);\n    const [wallet, setWallet] = React.useState({});\n    const ref = React.useRef(null);\n    const [profile, setProfile] = React.useState({ Access: [{ RoleId: \"\" }] });\n    const [typeOfRole, setTypeOfRole] = React.useState('');\n    const [validate, setValidate] = React.useState(false);\n    const [selectedFile, setSelectedFile] = React.useState(null);\n    let [userDetails, setUserDetails] = useState({\n\n        \"Studentno\": \"\",\n        \"Firstname\": \"\",\n        \"Middlename\": \"\",\n        \"Lastname\": \"\",\n        \"Emailaddress\": \"\",\n        \"Age\": \"\",\n        \"Address\": \"\",\n        \"Gender\": \"Female\",\n        \"Country\": \"\",\n        \"Contactno\": \"\",\n        \"Civilstatus\": \"\",\n        \"Schoolcampus\": \"\",\n        \"Degree\": \"\",\n        \"Course\": \"\",\n        \"Pictureblob\": \"\",\n        \"ApprovedBy\": \"\",\n        \"Servicecategorypriority\": \"\",\n        \"RoleId\": \"Student\",\n        \"Username\": \"\",\n        \"Password\": \"\",\n        \"Accountno\": \"\",\n        \"Accountname\": \"\",\n        \"Bankname\": \"\",\n        \"Location\": \"\"\n\n    });\n    const [typeOfActivity, setTypeOfActivity] = React.useState('');\n\n    const handleChangeOption = (event) => {\n        setTypeOfRole(event.target.value);\n    };\n\n    const handleChangeCategoryOption = (event) => {\n        setTypeOfActivity(event.target.value);\n    };\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        userDetails[e.target.name] = e.target.value;\n        setUserDetails(userDetails);\n        console.log(JSON.stringify(userDetails));\n    }\n\n    async function doLogin() {\n        const payload = userDetails;\n        setValidate(true);\n        payload[\"RoleId\"] = typeOfRole;\n        if (typeOfRole == \"Buddy\") {\n            payload[\"Servicecategorypriority\"] = typeOfActivity;\n        }\n        if (selectedFile != null) {\n            payload[\"Pictureblob\"] = selectedFile;\n        }\n        const result = await request('register', payload);\n        if (result[\"data\"] != null) {\n            toast.success(\"Registered successfully!\");\n            navigate('/login');\n        } else {\n            // alert(JSON.stringify(result));\n            toast.warn(\"Profile validation failed!\");\n        }\n\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const data = new FormData(event.currentTarget);\n        console.log({\n            email: data.get('email'),\n            password: data.get('password'),\n        });\n    };\n\n\n    const galleryImageList = [\n        \"https://raw.githubusercontent.com/dxyang/StyleTransfer/master/style_imgs/mosaic.jpg\",\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ea/Van_Gogh_-_Starry_Night_-_Google_Art_Project.jpg/1280px-Van_Gogh_-_Starry_Night_-_Google_Art_Project.jpg\",\n        \"https://raw.githubusercontent.com/ShafeenTejani/fast-style-transfer/master/examples/dora-maar-picasso.jpg\",\n        \"https://pbs.twimg.com/profile_images/925531519858257920/IyYLHp-u_400x400.jpg\",\n        \"https://raw.githubusercontent.com/ShafeenTejani/fast-style-transfer/master/examples/dog.jpg\",\n        \"http://r.ddmcdn.com/s_f/o_1/cx_462/cy_245/cw_1349/ch_1349/w_720/APL/uploads/2015/06/caturday-shutterstock_149320799.jpg\"\n    ];\n\n    useEffect(() => {\n        let session = localStorage.getItem(\"userProfile\");\n        setProfile(JSON.parse(session));\n    }, [])\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    useEffect(() => {\n        async function fetchData() {\n            let session = localStorage.getItem(\"session\");\n\n            const result = await request('getProfile', null);\n            const wallet = await request('getWallet', null, { userId: session });\n\n            setWallet(wallet);\n            setUserProfile(result.data);\n            // alert(JSON.stringify(result.data));\n        }\n\n        fetchData();\n\n    }, [])\n\n\n    function getProfile() {\n        if (userProfile.length > 0) {\n            return userProfile.map((item, i) => {\n                if (item._id == localStorage.getItem(\"session\")) {\n                    return (\n                        // <div className='row col-md-12 m-3' key={i}>\n                        //     <label><strong>Firstname:</strong> {item.Firstname}</label>\n                        //     <label><strong>Lastname:</strong> {item.Lastname}</label>\n                        //     <label><strong>Email:</strong> {item.Emailaddress}</label>\n                        //     <label><strong>Age:</strong> {item.Age}</label>\n                        //     <label><strong>Address:</strong> {item.Address}</label>\n                        //     <label><strong>Gender:</strong> {item.Gender}</label>\n                        //     <label><strong>Bank Account</strong></label>\n                        //     <label><strong>Account Number:</strong> {item.Bankaccount[0][\"Accountno\"]}</label>\n                        //     <label><strong>Account Name:</strong> {item.Bankaccount[0][\"Accountname\"]}</label>\n                        //     <label><strong>Bank Name:</strong> {item.Bankaccount[0][\"Bankname\"]}</label>\n                        //     <label><strong>Location:</strong> {item.Bankaccount[0][\"Location\"]}</label>\n\n                        //     <label className='mt-3'><strong>Wallet</strong></label>\n                        //     <label><strong>Balance:</strong> {wallet[\"Balance\"]}</label>\n                        //     <label><strong>Rewards:</strong> {wallet[\"Rewards\"]}</label>\n                        // </div>\n                        <div>\n                            <FormControl fullWidth error={selectedFile == null && validate ? true : false}>\n                                <InputLabel id=\"demo-simple-select-label\">{selectedFile == null ? \"Select Profile:\" : \"\"}</InputLabel>\n                                <ImageUpload cardName=\"Input Image\" imageGallery={galleryImageList} setSelectedFile={(i) => setSelectedFile(i)} selectedFile={selectedFile} />\n                            </FormControl>\n                            <Box component=\"form\" validate onSubmit={handleSubmit} sx={{ mt: 3, mb: 2 }}>\n\n                                <Grid container spacing={2} >\n                                    <Grid item xs={12} sm={4}>\n                                        <TextField\n                                            autoComplete=\"given-name\"\n                                            name=\"Firstname\"\n\n                                            fullWidth\n                                            id=\"Firstname\"\n                                            label=\"First Name\"\n                                            value={item.Firstname}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={4}>\n                                        <TextField\n\n                                            fullWidth\n                                            id=\"Middlename\"\n                                            label=\"M.I.\"\n                                            name=\"Middlename\"\n                                            autoComplete=\"family-name\"\n                                            value={item.Middlename}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={4}>\n                                        <TextField\n\n                                            required\n                                            fullWidth\n                                            value={item.Lastname}\n                                            id=\"Lastname\"\n                                            label=\"Last Name\"\n                                            name=\"Lastname\"\n                                            autoComplete=\"family-name\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Emailaddress\"\n                                            color={userDetails[\"Emailaddress\"] == \"\" && validate ? \"error\" : \"\"}\n                                            label=\"Email Address\"\n                                            name=\"Emailaddress\"\n                                            focused={validate}\n                                            value={item.Emailaddress}\n                                            autoComplete=\"Emailaddress\"\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Studentno\"\n                                            color={userDetails[\"Studentno\"] == \"\" && validate ? \"error\" : \"\"}\n                                            label=\"Student Number\"\n                                            name=\"Studentno\"\n                                            value={item.Studentno}\n                                            focused={validate}\n                                            autoComplete=\"Studentno\"\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Contactno\"\n                                            color={userDetails[\"Contactno\"] == \"\" && validate ? \"error\" : \"\"}\n                                            label=\"Mobile Number\"\n                                            name=\"Contactno\"\n                                            focused={validate}\n                                            value={item.Contactno}\n                                            autoComplete=\"Contactno\"\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Age\"\n                                            color={userDetails[\"Age\"] == \"\" && validate ? \"error\" : \"\"}\n                                            label=\"Age\"\n                                            name=\"Age\"\n                                            focused={validate}\n                                            value={item.Age}\n                                            autoComplete=\"age\"\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Address\"\n                                            color={userDetails[\"Address\"] == \"\" && validate ? \"error\" : \"\"}\n                                            label=\"Address\"\n                                            name=\"Address\"\n                                            value={item.Address}\n                                            focused={validate}\n                                            autoComplete=\"Address\"\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <FormLabel id=\"demo-radio-buttons-group-label\">Gender</FormLabel>\n                                        <RadioGroup\n                                            aria-labelledby=\"demo-radio-buttons-group-label\"\n                                            defaultValue={item.Gender}\n                                            name=\"radio-buttons-group\"\n                                            onChange={(e, value) => {\n                                                let user = userDetails;\n                                                if (value == 'Female') {\n                                                    user[\"Gender\"] = \"Female\";\n                                                } else {\n                                                    user[\"Gender\"] = \"Male\";\n                                                }\n                                                setUserDetails(user);\n                                            }}\n                                        >\n                                            <FormControlLabel value=\"Female\" control={<Radio />} label=\"Female\" />\n                                            <FormControlLabel value=\"Male\" control={<Radio />} label=\"Male\" />\n                                        </RadioGroup>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Country\"\n                                            value={item.Country}\n                                            label=\"Country\"\n                                            color={userDetails[\"Country\"] == \"\" && validate ? \"error\" : \"\"}\n                                            focused={validate}\n                                            name=\"Country\"\n                                            autoComplete=\"Country\"\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Civilstatus\"\n                                            label=\"Civil Status\"\n                                            name=\"Civilstatus\"\n                                            value={item.Civilstatus}\n                                            color={userDetails[\"Civilstatus\"] == \"\" && validate ? \"error\" : \"\"}\n                                            autoComplete=\"Civilstatus\"\n                                            focused={validate}\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Schoolcampus\"\n                                            value={item.Schoolcampus}\n                                            label=\"School Campus\"\n                                            name=\"Schoolcampus\"\n                                            color={userDetails[\"Schoolcampus\"] == \"\" && validate ? \"error\" : \"\"}\n                                            autoComplete=\"Schoolcampus\"\n                                            focused={validate}\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Degree\"\n                                            value={item.Degree}\n                                            color={userDetails[\"Degree\"] == \"\" && validate ? \"error\" : \"\"}\n                                            label=\"Degree\"\n                                            focused={validate}\n                                            name=\"Degree\"\n                                            autoComplete=\"Degree\"\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Course\"\n                                            label=\"Course\"\n                                            value={item.Course}\n                                            name=\"Course\"\n                                            color={userDetails[\"Course\"] == \"\" && validate ? \"error\" : \"\"}\n                                            autoComplete=\"Course\"\n                                            focused={validate}\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Username\"\n                                            value={item.Access[0].Username}\n                                            label=\"Username\"\n                                        />\n                                    </Grid>\n                                    {/* <Grid item xs={12}>\n                                    <TextField\n                                        required\n                                        fullWidth\n                                        name=\"Password\"\n                                        label=\"Password\"\n                                        type=\"Password\"\n                                        value={item.Password}\n                                        id=\"Password\"\n                                        color={userDetails[\"Password\"] == \"\" && validate ? \"error\" : \"\"}\n                                        autoComplete=\"Password\"\n                                        onChange={handleChange}\n                                    />\n                                </Grid> */}\n\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Accountno\"\n                                            label=\"Account No.\"\n                                            value={item.Bankaccount[0].Accountno}\n                                            name=\"Accountno\"\n                                            color={userDetails[\"Accountno\"] == \"\" && validate ? \"error\" : \"\"}\n                                            focused={validate}\n                                            autoComplete=\"Accountno\"\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Accountname\"\n                                            label=\"Account Name\"\n                                            name=\"Accountname\"\n                                            value={item.Bankaccount[0].Accountname}\n                                            color={userDetails[\"Accountname\"] == \"\" && validate ? \"error\" : \"\"}\n                                            focused={validate}\n                                            autoComplete=\"Accountname\"\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Bankname\"\n                                            label=\"Bank Name\"\n                                            name=\"Bankname\"\n                                            value={item.Bankaccount[0].Bankname}\n                                            color={userDetails[\"Bankname\"] == \"\" && validate ? \"error\" : \"\"}\n                                            focused={validate}\n                                            autoComplete=\"Bankname\"\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Location\"\n                                            label=\"Location\"\n                                            name=\"Location\"\n                                            value={item.Bankaccount[0].Location}\n                                            color={userDetails[\"Location\"] == \"\" && validate ? \"error\" : \"\"}\n                                            focused={validate}\n                                            autoComplete=\"Location\"\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"Role\"\n                                            label=\"Role\"\n                                            name=\"Role\"\n                                            value={item.Access[0].RoleId}\n                                            focused={validate}\n                                            autoComplete=\"Location\"\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                    {item.Access[0].RoleId == \"Student\" ? null : <Grid item xs={12}>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            id=\"RoleType\"\n                                            label=\"Role Type\"\n                                            name=\"RoleType\"\n                                            value={item.Servicecategorypriority}\n                                            focused={validate}\n                                            autoComplete=\"Location\"\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>}\n                                    {/* <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                                />\n                            </Grid> */}\n                                    {/* <Grid item xs={12}>\n                                    <FormControl fullWidth error={typeOfRole == \"\" && validate ? true : false}>\n                                        <InputLabel id=\"demo-simple-select-label\">Type of Role:</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"role\"\n                                            name=\"role\"\n                                            color={userDetails[\"Lastname\"] == \"\" && validate ? \"error\" : \"\"}\n                                            focused={validate}\n                                            value={typeOfRole}\n                                            label=\"Select Role:\"\n                                            onChange={handleChangeOption}\n                                        >\n                                            <MenuItem value={\"Student\"}>Student</MenuItem>\n                                            <MenuItem value={\"Buddy\"}>Buddy</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n                                {typeOfRole == \"Buddy\" ? <Grid item xs={12}>\n                                    <FormControl fullWidth error={typeOfActivity == \"\" && validate ? true : false}>\n                                        <InputLabel id=\"demo-simple-select-label\">Service Category:</InputLabel>\n                                        <Select\n                                            labelId=\"demo-simple-select-label\"\n                                            id=\"type_of_activity\"\n                                            name=\"type_of_activity\"\n                                            value={typeOfActivity}\n                                            label=\"Select Activity:\"\n                                            onChange={handleChangeCategoryOption}\n                                        >\n                                            <MenuItem value={\"Companion\"}>Companion</MenuItem>\n                                            <MenuItem value={\"Tutor\"}>Tutor</MenuItem>\n                                            <MenuItem value={\"Helper\"}>Helper</MenuItem>\n                                        </Select>\n                                    </FormControl>\n                                </Grid> : null} */}\n                                </Grid>\n\n                            </Box>\n                        </div>\n                    )\n                }\n            })\n\n        }\n    }\n\n    return (\n        <Box sx={{ pb: 7 }} ref={ref}>\n            <CssBaseline />\n            <ElevationScroll {...props}>\n                <AppBar style={{ background: '#087830' }}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" component=\"div\">\n                            Profile\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n            </ElevationScroll>\n            <Toolbar />\n\n            <ThemeProvider theme={theme}>\n                <Container component=\"main\" maxWidth=\"xs\">\n                    {getProfile()}\n\n                </Container>\n            </ThemeProvider>\n            {profile[\"Access\"][0].RoleId != \"Buddy\" ? <Fab color=\"primary\" className=\"add-service\" aria-label=\"add\" onClick={() => navigate('/services')}>\n                <AddIcon />\n            </Fab> : null}\n            <Fab color=\"success\" className=\"cash-in\" aria-label=\"cash-in\" onClick={() => navigate('/cash-in')}>\n                <AccountBalanceWalletIcon />\n            </Fab>\n            <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} elevation={3}>\n                <BottomNavigation\n                    showLabels\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                    }}\n                >\n                    {profile[\"Access\"][0].RoleId == \"Buddy\" ? <BottomNavigationAction label=\"Services\" onClick={() => navigate('/home')} icon={<RestoreIcon />} /> : null}\n                    <BottomNavigationAction label=\"On Going\" onClick={() => navigate('/on-going-activity')} icon={<FavoriteIcon />} />\n                    <BottomNavigationAction label=\"History\" onClick={() => navigate('/history')} icon={<ArchiveIcon />} />\n                    {/* <BottomNavigationAction label=\"Profile\" onClick={() => navigate('/profile')} icon={<ArchiveIcon />} /> */}\n                </BottomNavigation>\n            </Paper>\n        </Box>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}