{"ast":null,"code":"var _jsxFileName = \"/Users/larainefajardo/Desktop/web_app/_progressive_web_app/react/companion/src/components/resetPassword.js\";\nimport React, { Component } from 'react'; // import '../styles/App.css';\n// import { passwordFormat } from '../utils/security.js';\n// import { apiModule } from '../api/apiCall';\n// import queryString from 'query-string';\n// import { withRouter, Link } from 'react-router-dom';\n// import { styles } from '../styles/styles.js';\n// import PasswordField from '../components/Login/passwordField';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openList: false,\n      listOfFarms: [],\n      selectedFarm: '--',\n      isLoading: false,\n      email: '',\n      confirm_password: '',\n      password_error: 'Please input a valid password.',\n      password: '',\n      passClasses: \"input100\",\n      confirmPassClasses: \"input100\",\n      passwordReadable: false,\n      confirmReadable: false,\n      confirmMessage: \"Confirm your password\",\n      passwordMessage: \"Please enter a valid password\",\n      passwordValidation: \"wrap-input100 validate-input m-b-50\",\n      confirmPasswordValidation: \"wrap-input100 validate-input m-b-50\"\n    };\n    this.handleChanges = this.handleChanges.bind(this);\n    this.handlePasswordReadability = this.handlePasswordReadability.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChanges(event) {\n    if (event.target.name === 'pass') {\n      if (event.target.value) {\n        this.setState({\n          password: event.target.value\n        });\n        this.setState({\n          passClasses: \"input100 has-val\",\n          passwordValidation: \"wrap-input100 validate-input m-b-50\"\n        });\n      } else {\n        this.setState({\n          passClasses: \"input100\",\n          passwordValidation: \"wrap-input100 validate-input m-b-50 alert-validate\"\n        });\n      }\n    }\n\n    if (event.target.name === 'confirm_password') {\n      if (event.target.value) {\n        this.setState({\n          confirm_password: event.target.value\n        });\n        this.setState({\n          confirmPassClasses: \"input100 has-val\",\n          confirmPasswordValidation: \"wrap-input100 validate-input m-b-50\"\n        });\n      } else {\n        this.setState({\n          confirmPassClasses: \"input100\",\n          confirmPasswordValidation: \"wrap-input100 validate-input m-b-50 alert-validate\"\n        });\n      }\n    }\n  }\n\n  handlePasswordReadability(e) {\n    if (e.currentTarget.id === 'pass_read') {\n      this.state.passwordReadable ? this.setState({\n        passwordReadable: false\n      }) : this.setState({\n        passwordReadable: true\n      });\n    }\n\n    if (e.currentTarget.id === 'confirm_password_read') {\n      this.state.confirmReadable ? this.setState({\n        confirmReadable: false\n      }) : this.setState({\n        confirmReadable: true\n      });\n    }\n  }\n\n  handleValidation() {\n    let bool = true;\n\n    if (this.state.password !== this.state.confirm_password) {\n      this.setState({\n        password_error: \"Your passwords must match.\"\n      });\n      bool = false;\n    }\n\n    if (!passwordFormat(this.state.password) || !passwordFormat(this.state.confirm_password)) {\n      this.setState({\n        password_error: \"Your password is not compliant with the password policy.\"\n      });\n      bool = false;\n    }\n\n    return bool;\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.handleValidation()) {\n      console.log(\"Password is compliant with the password policy.\");\n      const parsed = queryString.parseUrl(window.location.href);\n      let resetData = {\n        token: parsed.query.token,\n        password: this.state.password\n      };\n      let data = await apiModule('authentication_reset_password', {}, resetData);\n\n      if (data.status === 'success') {\n        window.confirm(data.message);\n        window.location = parsed.url;\n      } else {\n        window.confirm(data.message);\n      }\n    } else {\n      alert(this.state.password_error);\n    }\n  } // render() {\n  //   return (\n  //     <div className=\"limiter\" style={styles.templateSkin}>\n  //       <div className=\"login-form\">\n  //         <div className=\"login-form-wrapper p-t-85 p-b-20\">\n  //           <div className=\"login100-form validate-form\">\n  //             <form onSubmit={this.handleSubmit}>\n  //               <span className=\"reset-form-title p-b-70\">\n  //                 Please input new password\n  //               </span>\n  //               <PasswordField\n  //                 fieldName={\"pass\"}\n  //                 containerClass={this.state.passwordValidation}\n  //                 fieldClass={this.state.passClasses}\n  //                 fieldValue={this.state.password}\n  //                 changeHandler={event => { this.handleChanges(event); }}\n  //                 readabilityHandler={event => { this.handlePasswordReadability(event); }}\n  //                 readabilityIcon={true}\n  //                 readabilityClass={this.state.passwordReadable}\n  //                 passwordMessage={this.state.passwordMessage}\n  //               >\n  //                 Password\n  //               </PasswordField>\n  //               <PasswordField\n  //                 fieldName={\"confirm_password\"}\n  //                 containerClass={this.state.confirmPasswordValidation}\n  //                 fieldClass={this.state.confirmPassClasses}\n  //                 fieldValue={this.state.confirm_password}\n  //                 changeHandler={event => { this.handleChanges(event); }}\n  //                 readabilityHandler={event => { this.handlePasswordReadability(event); }}\n  //                 readabilityIcon={true}\n  //                 readabilityClass={this.state.confirmReadable}\n  //                 passwordMessage={this.state.confirmMessage}\n  //               >\n  //                 Password Confirmation\n  //               </PasswordField>\n  //               <label className=\"regular-label\">Use of 8 or more upper and lower case letters with mix of numbers and symbols</label>\n  //               <div className=\"login-form-form-btn\">\n  //                 <button type=\"submit\" className=\"login100-form-btn\">\n  //                   SUBMIT\n  //                 </button>\n  //               </div>\n  //               {/* <div className=\"center-align\">\n  //                 <label className=\"regular-label\">Already a member? <u onClick={() => this.props.history.push(\"/\")}>Login</u></label>\n  //               </div> */}\n  //             </form>\n  //           </div>\n  //         </div>\n  //         <footer className=\"login-form-footer\">\n  //           <Link to=\"/contact-us\" className=\"login-form-footer__text\">\n  //             Contact\n  //           </Link>\n  //           <mark className=\"login-form-footer__text\">\n  //             |\tPhoenix Petroleum Philippines, Inc. | Copyright 2019\n  //           </mark>\n  //         </footer>\n  //       </div>\n  //       <figure className=\"login-image\">\n  //         <img className=\"login-image__background\" alt=\"Login background\" src={require(\"../assets/images/bg-login.png\")} />\n  //       </figure>\n  //     </div>\n  //   );\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ResetPassword;","map":{"version":3,"sources":["/Users/larainefajardo/Desktop/web_app/_progressive_web_app/react/companion/src/components/resetPassword.js"],"names":["React","Component","ResetPassword","constructor","props","state","openList","listOfFarms","selectedFarm","isLoading","email","confirm_password","password_error","password","passClasses","confirmPassClasses","passwordReadable","confirmReadable","confirmMessage","passwordMessage","passwordValidation","confirmPasswordValidation","handleChanges","bind","handlePasswordReadability","handleSubmit","event","target","name","value","setState","e","currentTarget","id","handleValidation","bool","passwordFormat","preventDefault","console","log","parsed","queryString","parseUrl","window","location","href","resetData","token","query","data","apiModule","status","confirm","message","url","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import '../styles/App.css';\n// import { passwordFormat } from '../utils/security.js';\n// import { apiModule } from '../api/apiCall';\n// import queryString from 'query-string';\n// import { withRouter, Link } from 'react-router-dom';\n// import { styles } from '../styles/styles.js';\n// import PasswordField from '../components/Login/passwordField';\n\nclass ResetPassword extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      openList: false,\n      listOfFarms: [],\n      selectedFarm: '--',\n      isLoading: false,\n      email: '',\n      confirm_password: '',\n      password_error: 'Please input a valid password.',\n\n      password: '',\n      passClasses: \"input100\",\n      confirmPassClasses: \"input100\",\n      passwordReadable: false,\n      confirmReadable: false,\n      confirmMessage: \"Confirm your password\",\n      passwordMessage: \"Please enter a valid password\",\n      passwordValidation: \"wrap-input100 validate-input m-b-50\",\n      confirmPasswordValidation: \"wrap-input100 validate-input m-b-50\",\n    };\n    this.handleChanges = this.handleChanges.bind(this);\n    this.handlePasswordReadability = this.handlePasswordReadability.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChanges(event) {\n\n    if (event.target.name === 'pass') {\n      if (event.target.value) {\n        this.setState({ password: event.target.value });\n        this.setState({ passClasses: \"input100 has-val\", passwordValidation: \"wrap-input100 validate-input m-b-50\" })\n      } else {\n        this.setState({\n          passClasses: \"input100\",\n          passwordValidation: \"wrap-input100 validate-input m-b-50 alert-validate\"\n        })\n      }\n    }\n\n    if (event.target.name === 'confirm_password') {\n      if (event.target.value) {\n        this.setState({ confirm_password: event.target.value });\n        this.setState({ confirmPassClasses: \"input100 has-val\", confirmPasswordValidation: \"wrap-input100 validate-input m-b-50\" })\n      } else {\n        this.setState({\n          confirmPassClasses: \"input100\",\n          confirmPasswordValidation: \"wrap-input100 validate-input m-b-50 alert-validate\"\n        })\n      }\n    }\n  }\n\n  handlePasswordReadability(e) {\n    if (e.currentTarget.id === 'pass_read') {\n      this.state.passwordReadable\n        ? this.setState({ passwordReadable: false })\n        : this.setState({ passwordReadable: true });\n    }\n\n\n    if (e.currentTarget.id === 'confirm_password_read') {\n      this.state.confirmReadable\n        ? this.setState({ confirmReadable: false })\n        : this.setState({ confirmReadable: true });\n    }\n  }\n\n  handleValidation() {\n    let bool = true;\n    if (this.state.password !== this.state.confirm_password) {\n      this.setState({ password_error: \"Your passwords must match.\" });\n      bool = false;\n    }\n    if (!passwordFormat(this.state.password) || !passwordFormat(this.state.confirm_password)) {\n      this.setState({ password_error: \"Your password is not compliant with the password policy.\" });\n      bool = false;\n    }\n    return bool;\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    if (this.handleValidation()) {\n      console.log(\"Password is compliant with the password policy.\");\n      const parsed = queryString.parseUrl(window.location.href);\n      let resetData = { token: parsed.query.token, password: this.state.password };\n      let data = await apiModule('authentication_reset_password', {}, resetData);\n      if (data.status === 'success') {\n        window.confirm(data.message);\n        window.location = parsed.url;\n      } else {\n        window.confirm(data.message);\n      }\n    } else {\n      alert(this.state.password_error);\n    }\n  }\n\n  // render() {\n  //   return (\n  //     <div className=\"limiter\" style={styles.templateSkin}>\n  //       <div className=\"login-form\">\n  //         <div className=\"login-form-wrapper p-t-85 p-b-20\">\n  //           <div className=\"login100-form validate-form\">\n  //             <form onSubmit={this.handleSubmit}>\n  //               <span className=\"reset-form-title p-b-70\">\n  //                 Please input new password\n  //               </span>\n\n  //               <PasswordField\n  //                 fieldName={\"pass\"}\n\n  //                 containerClass={this.state.passwordValidation}\n  //                 fieldClass={this.state.passClasses}\n  //                 fieldValue={this.state.password}\n\n  //                 changeHandler={event => { this.handleChanges(event); }}\n  //                 readabilityHandler={event => { this.handlePasswordReadability(event); }}\n\n  //                 readabilityIcon={true}\n  //                 readabilityClass={this.state.passwordReadable}\n  //                 passwordMessage={this.state.passwordMessage}\n  //               >\n  //                 Password\n  //               </PasswordField>\n\n  //               <PasswordField\n  //                 fieldName={\"confirm_password\"}\n\n  //                 containerClass={this.state.confirmPasswordValidation}\n  //                 fieldClass={this.state.confirmPassClasses}\n  //                 fieldValue={this.state.confirm_password}\n\n  //                 changeHandler={event => { this.handleChanges(event); }}\n  //                 readabilityHandler={event => { this.handlePasswordReadability(event); }}\n\n  //                 readabilityIcon={true}\n  //                 readabilityClass={this.state.confirmReadable}\n  //                 passwordMessage={this.state.confirmMessage}\n  //               >\n  //                 Password Confirmation\n  //               </PasswordField>\n\n  //               <label className=\"regular-label\">Use of 8 or more upper and lower case letters with mix of numbers and symbols</label>\n\n  //               <div className=\"login-form-form-btn\">\n  //                 <button type=\"submit\" className=\"login100-form-btn\">\n  //                   SUBMIT\n  //                 </button>\n  //               </div>\n  //               {/* <div className=\"center-align\">\n  //                 <label className=\"regular-label\">Already a member? <u onClick={() => this.props.history.push(\"/\")}>Login</u></label>\n  //               </div> */}\n  //             </form>\n  //           </div>\n  //         </div>\n  //         <footer className=\"login-form-footer\">\n  //           <Link to=\"/contact-us\" className=\"login-form-footer__text\">\n  //             Contact\n  //           </Link>\n  //           <mark className=\"login-form-footer__text\">\n  //             |\tPhoenix Petroleum Philippines, Inc. | Copyright 2019\n  //           </mark>\n  //         </footer>\n  //       </div>\n  //       <figure className=\"login-image\">\n  //         <img className=\"login-image__background\" alt=\"Login background\" src={require(\"../assets/images/bg-login.png\")} />\n  //       </figure>\n  //     </div>\n  //   );\n\n  // }\n\n  render() {\n    return (\n      <div />\n    )\n  }\n}\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}