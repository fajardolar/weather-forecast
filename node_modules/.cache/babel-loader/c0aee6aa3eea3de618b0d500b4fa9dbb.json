{"ast":null,"code":"var _jsxFileName = \"/Users/larainefajardo/Desktop/web_app/_progressive_web_app/react/companion/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport './App.css';\nimport { writeData, readAllData } from './utils/db';\nimport Routes from './utils/routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [session, setSession] = useState({\n    jwt: '',\n    full_name: '',\n    user: null,\n    customer: null,\n    permissions: [],\n    role: ''\n  });\n  const [isAuthenticating, setIsAuthenticating] = useState(false);\n  const [errorPage, setErrorPage] = useState(\"\");\n  const [page, setPage] = useState(\"\");\n  useEffect(() => {\n    this.authUser().then(user => {\n      if (user[0]) {\n        let item = {\n          jwt: user[0].jwt,\n          full_name: user[0].full_name,\n          user: user[0].user,\n          role: user[0].user.role\n        }; //console.log(user[0]);\n\n        if (user[0].user.role.name === \"Customer\") {\n          item.customer = user[0].customer;\n        } else {\n          console.log(\"App.js - user is not a customer \");\n          console.log(user[0].user.role);\n        } // this.setState({ session: item, isAuthenticating: false });\n\n\n        setSession(item);\n        setIsAuthenticating(false);\n      } else {// this.setState({ errorPage: <ErrorPage /> })\n        // setErrorPage(<ErrorPage />);\n      }\n    }, error => {\n      // this.setState({ isAuthenticating: false });\n      setIsAuthenticating(false); // alert(error);\n    });\n  });\n\n  getSession = () => {\n    return session;\n  };\n\n  authUser = () => {\n    return new Promise((resolve, reject) => {\n      // this.setState({ isAuthenticating: true });\n      setIsAuthenticating(true);\n      const user = readAllData('users');\n      const authPaths = [\"/\", \"/forgot-password\", \"/register\"];\n\n      if (authPaths.includes(window.location.pathname)) {\n        if (user.length > 0) {\n          resolve(user);\n        } else {\n          reject('User not logged in');\n        }\n      } else {\n        if (user) {\n          resolve(user);\n        } else {\n          reject('User not logged in');\n        }\n      }\n    });\n  };\n\n  setUserSession = user => {\n    console.log(\"setUserSession : \");\n    console.log(user); // this.setState({ session: user });\n\n    setSession(user);\n  };\n\n  changePageHandler = pageId => {\n    // this.setState({ page: pageId });\n    setPage(pageId);\n  };\n\n  checkSession = () => {\n    return session;\n  };\n\n  let routes = this.state.errorPage;\n\n  if (this.state.isAuthenticating === false) {\n    routes = /*#__PURE__*/_jsxDEV(Routes, {\n      dbSession: () => this.checkSession(),\n      pageId: this.state.page,\n      changePageHandler: pageId => this.changePageHandler(pageId),\n      setUserSession: user => this.setUserSession(user),\n      getSession: () => this.getSession()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: routes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"JJUvdTweJzkFQwW6RYtajsVkV4E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/larainefajardo/Desktop/web_app/_progressive_web_app/react/companion/src/App.js"],"names":["React","useState","Fragment","writeData","readAllData","Routes","App","session","setSession","jwt","full_name","user","customer","permissions","role","isAuthenticating","setIsAuthenticating","errorPage","setErrorPage","page","setPage","useEffect","authUser","then","item","name","console","log","error","getSession","Promise","resolve","reject","authPaths","includes","window","location","pathname","length","setUserSession","changePageHandler","pageId","checkSession","routes","state"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport './App.css';\nimport { writeData, readAllData } from './utils/db';\nimport Routes from './utils/routes';\n\nfunction App() {\n  const [session, setSession] = useState({\n    jwt: '',\n    full_name: '',\n    user: null,\n    customer: null,\n    permissions: [],\n    role: '',\n  });\n  const [isAuthenticating, setIsAuthenticating] = useState(false);\n  const [errorPage, setErrorPage] = useState(\"\");\n  const [page, setPage] = useState(\"\");\n\n  useEffect(() => {\n\n    this.authUser().then(user => {\n      if (user[0]) {\n        let item = {\n          jwt: user[0].jwt,\n          full_name: user[0].full_name,\n          user: user[0].user,\n          role: user[0].user.role,\n\n        }\n        //console.log(user[0]);\n        if (user[0].user.role.name === \"Customer\") {\n          item.customer = user[0].customer;\n        } else {\n          console.log(\"App.js - user is not a customer \");\n          console.log(user[0].user.role);\n        }\n        // this.setState({ session: item, isAuthenticating: false });\n        setSession(item);\n        setIsAuthenticating(false);\n      } else {\n        // this.setState({ errorPage: <ErrorPage /> })\n        // setErrorPage(<ErrorPage />);\n      }\n    }, error => {\n      // this.setState({ isAuthenticating: false });\n      setIsAuthenticating(false);\n      // alert(error);\n    }\n    );\n\n  });\n\n  getSession = () => {\n    return session;\n  }\n\n  authUser = () => {\n    return new Promise((resolve, reject) => {\n      // this.setState({ isAuthenticating: true });\n      setIsAuthenticating(true);\n      const user = readAllData('users');\n      const authPaths = [\"/\", \"/forgot-password\", \"/register\"]\n      if (authPaths.includes(window.location.pathname)) {\n        if (user.length > 0) {\n          resolve(user);\n        } else {\n          reject('User not logged in');\n        }\n      } else {\n        if (user) {\n          resolve(user);\n        } else {\n          reject('User not logged in');\n        }\n      }\n    }\n    )\n  }\n\n  setUserSession = (user) => {\n    console.log(\"setUserSession : \");\n    console.log(user);\n\n    // this.setState({ session: user });\n    setSession(user);\n  }\n\n  changePageHandler = (pageId) => {\n    // this.setState({ page: pageId });\n    setPage(pageId);\n  }\n\n  checkSession = () => {\n    return session;\n  }\n\n  let routes = this.state.errorPage;\n  if (this.state.isAuthenticating === false) {\n    routes = (\n      <Routes\n        dbSession={() => this.checkSession()}\n        pageId={this.state.page}\n        changePageHandler={(pageId) => this.changePageHandler(pageId)}\n        setUserSession={(user) => this.setUserSession(user)}\n        getSession={() => this.getSession()}\n      />\n    )\n  }\n  return (\n    <Fragment>\n      {routes}\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}