{"ast":null,"code":"import { API_URL, endpoints } from './endpoints';\n/**\n * Make a request to the API endpoint\n *\n * @param {string} type - Module type\n * @param {Object} payload - Payload to be passed to the module\n * @param {Object} params - Parameters to be passed to API endpoint\n */\n\nexport const request = function (type) {\n  let payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const {\n    url,\n    method,\n    headers\n  } = endpoints(params)[type];\n  return new Promise((resolve, reject) => {\n    if (payload === null) {\n      // GET method\n      fetch(API_URL + url).then(response => response.json()).then(data => resolve(data)).catch(error => {\n        console.log(error);\n        reject(error);\n      });\n    } else {\n      // POST | PUT | DELETE? | PATCH methods\n      const body = JSON.stringify(payload);\n      fetch(API_URL + url, {\n        method,\n        headers,\n        mode: 'no-cors',\n        body\n      }).then(response => response.json()).then(data => resolve(data)).catch(error => {\n        console.log(error);\n        reject(error);\n      });\n    }\n  });\n};","map":{"version":3,"sources":["/Users/larainefajardo/Desktop/web_app/_progressive_web_app/react/companion/src/api/api.js"],"names":["API_URL","endpoints","request","type","payload","params","url","method","headers","Promise","resolve","reject","fetch","then","response","json","data","catch","error","console","log","body","JSON","stringify","mode"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,SAAlB,QAAmC,aAAnC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAG,UAACC,IAAD,EAAuC;AAAA,MAAhCC,OAAgC,uEAAtB,IAAsB;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;AAC1D,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,MAAP;AAAeC,IAAAA;AAAf,MAA2BP,SAAS,CAACI,MAAD,CAAT,CAAkBF,IAAlB,CAAjC;AAEA,SAAO,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AAClB;AACAQ,MAAAA,KAAK,CAACZ,OAAO,GAAGM,GAAX,CAAL,CACKO,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,IAAD,IAAUN,OAAO,CAACM,IAAD,CAF3B,EAGKC,KAHL,CAGYC,KAAD,IAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAP,QAAAA,MAAM,CAACO,KAAD,CAAN;AACH,OANL;AAOH,KATD,MASO;AACH;AACA,YAAMG,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAenB,OAAf,CAAb;AACAQ,MAAAA,KAAK,CAACZ,OAAO,GAAGM,GAAX,EAAgB;AAAEC,QAAAA,MAAF;AAAUC,QAAAA,OAAV;AAAmBgB,QAAAA,IAAI,EAAE,SAAzB;AAAoCH,QAAAA;AAApC,OAAhB,CAAL,CACKR,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,IAAD,IAAUN,OAAO,CAACM,IAAD,CAF3B,EAGKC,KAHL,CAGYC,KAAD,IAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAP,QAAAA,MAAM,CAACO,KAAD,CAAN;AACH,OANL;AAOH;AACJ,GArBM,CAAP;AAsBH,CAzBM","sourcesContent":["import { API_URL, endpoints } from './endpoints';\n\n/**\n * Make a request to the API endpoint\n *\n * @param {string} type - Module type\n * @param {Object} payload - Payload to be passed to the module\n * @param {Object} params - Parameters to be passed to API endpoint\n */\nexport const request = (type, payload = null, params = {}) => {\n    const { url, method, headers } = endpoints(params)[type];\n\n    return new Promise((resolve, reject) => {\n        if (payload === null) {\n            // GET method\n            fetch(API_URL + url)\n                .then((response) => response.json())\n                .then((data) => resolve(data))\n                .catch((error) => {\n                    console.log(error);\n                    reject(error);\n                });\n        } else {\n            // POST | PUT | DELETE? | PATCH methods\n            const body = JSON.stringify(payload);\n            fetch(API_URL + url, { method, headers, mode: 'no-cors', body })\n                .then((response) => response.json())\n                .then((data) => resolve(data))\n                .catch((error) => {\n                    console.log(error);\n                    reject(error);\n                });\n        }\n    });\n};\n"]},"metadata":{},"sourceType":"module"}